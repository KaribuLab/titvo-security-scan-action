name: ci

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"

jobs:
  check_tag:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      tag_exists: ${{ steps.check_tag.outputs.tag_exists }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download kli
        id: download_kli
        run: |
          curl -sL https://github.com/KaribuLab/kli/releases/download/v0.2.2/kli  --output kli
      - name: Check tag
        id: check_tag
        run: |
          chmod +x ./kli
          LATEST_VERSION=$( ./kli semver 2>&1 )
          LATEST_GIT_TAG=$( git describe --tags --abbrev=0 || echo "" )
          echo "latest_version=$LATEST_VERSION"
          echo "latest_git_tag=$LATEST_GIT_TAG"
          if [ "$LATEST_VERSION" == "$LATEST_GIT_TAG" ]; then
            echo "tag_exists=true"
            echo "tag_exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "tag_exists=false"
            echo "tag_exists=false" >> "$GITHUB_OUTPUT"
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: kli
          path: kli
  create_tag:
    needs: check_tag
    runs-on: ubuntu-latest
    if: needs.check_tag.outputs.tag_exists == 'false'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.KARIBU_SSH_KEY }}
      - name: Set up Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      - name: Download kli
        uses: actions/download-artifact@v4
        with:
          name: kli
          path: ./
      - name: Create tag
        id: create_tag
        run: |

          chmod +x kli
          ./kli semver -t
  build_main:
    needs: create_tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/titvo-security-scan-action:latest
  build_tag:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Get the version
        id: get_version
        run: |
          IMAGE_VERSION=$(git describe --tags --abbrev=0)
          echo "IMAGE_VERSION=${IMAGE_VERSION}" >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/titvo-security-scan-act:${{ env.IMAGE_VERSION }}

